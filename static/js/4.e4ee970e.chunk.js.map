{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/dialogs.module.css","img/default.png","components/Dialogs/dialogs.jsx","components/Dialogs/dialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","maxLength50","maxLengthCreator","DialogItem","path","id","className","classes","link","activeClassName","active","name","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","htmlFor","Field","component","Textarea","placeholder","messageArea","validate","required","btn","Dialogs","console","log","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","nav","users","account","box","src","accountImg","alt","img","fullName","href","values","sendMessage","newMessageText","compose","dispatch","sendMessageCreator"],"mappings":"sNAIIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIdE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAIC,KAAKC,MAAMN,OAER,kBAACG,EAAcE,KAAKC,OAFG,kBAAC,IAAD,CAAUC,GAAG,eAHR,GACXC,IAAML,WAUtC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBCnB7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,KAAO,sBAAsB,OAAS,wBAAwB,QAAU,yBAAyB,IAAM,qBAAqB,IAAM,qBAAqB,IAAM,qBAAqB,YAAc,6BAA6B,QAAU,yBAAyB,KAAO,wB,oBCD3VD,EAAOC,QAAU,IAA0B,qC,0JCSrCC,EAAcC,YAAiB,IAE/BC,EAAa,SAACR,GAChB,IAAIS,EAAM,YAAcT,EAAMU,GAE9B,OACI,4BACI,kBAAC,IAAD,CAAST,GAAIQ,EAAME,UAAWC,IAAQC,KAAMC,gBAAiBF,IAAQG,QAChEf,EAAMgB,QAMjBC,EAAU,SAACjB,GACf,OACI,yBAAKW,UAAWC,IAAQM,SAAUlB,EAAMkB,UAkDxCC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,EAZL,SAACpB,GACtB,OACI,0BAAMsB,SAAUtB,EAAMuB,aAAcZ,UAAWC,IAAQS,MACnD,2BAAOG,QAAQ,QACX,oIACA,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUX,KAAK,iBAAiBY,YAAY,qJAA6BjB,UAAWC,IAAQiB,YAAaC,SAAU,CAACC,IAAUzB,MAEpJ,4BAAQK,UAAWC,IAAQoB,KAA3B,wDASKC,EAlDC,SAACjC,GACbkC,QAAQC,IAAInC,GACZ,IAAIP,EAAQO,EAAMoC,YAEdC,EAAkB5C,EAAM6C,QAAQC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMyB,IAAKD,EAAE9B,GAAIA,GAAI8B,EAAE9B,QACrFgC,EAAmBjD,EAAMkD,SAASJ,KAAK,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,QAASuB,IAAKG,EAAElC,QAMpF,OAAIV,EAAMN,OAGF,yBAAKiB,UAAWC,IAAQ0B,SACpB,yBAAK3B,UAAWC,IAAQiC,KACpB,wBAAIlC,UAAWC,IAAQkC,OAClBT,IAGT,yBAAK1B,UAAWC,IAAQ+B,UACnBD,EACD,yBAAK/B,UAAWC,IAAQmC,SACpB,yBAAKpC,UAAWC,IAAQoC,KACpB,yBAAKC,IAAKC,IAAYC,IAAI,GAAGxC,UAAWC,IAAQwC,MAChD,0BAAMzC,UAAWC,IAAQyC,UAAU,uBAAGC,KAAK,KAAK3C,UAAWC,IAAQC,MAAhC,UAEvC,kBAACM,EAAD,CAAqBG,SApBrB,SAACiC,GACjBvD,EAAMwD,YAAYD,EAAOE,sBAGJ,kBAAC,IAAD,CAAUxD,GAAG,Y,wBCd3ByD,sBACXvD,aAnBkB,SAACV,GACnB,MAAO,CACH2C,YAAa3C,EAAM2C,YACnBqB,eAAgBhE,EAAM2C,YAAYqB,mBAMjB,SAACE,GACtB,MAAO,CACHH,YAAa,SAACC,GACVE,EAASC,YAAmBH,SAQpC7D,IAFW8D,CAGbzB","file":"static/js/4.e4ee970e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__2GMN6\",\"users\":\"dialogs_users__3O4Al\",\"link\":\"dialogs_link__36IZH\",\"active\":\"dialogs_active__1lKRK\",\"account\":\"dialogs_account__2DgMU\",\"box\":\"dialogs_box__1_L4e\",\"img\":\"dialogs_img__3uXfa\",\"btn\":\"dialogs_btn__1CcUL\",\"messageArea\":\"dialogs_messageArea__2fmtD\",\"message\":\"dialogs_message__2jeIW\",\"form\":\"dialogs_form__13X_B\"};","module.exports = __webpack_public_path__ + \"static/media/default.e1ab209c.png\";","import React from \"react\";\r\nimport classes from './dialogs.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport accountImg from \"../../img/default.png\";\r\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../Common/FormsControls/formsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst DialogItem = (props) => {\r\n    let path =\"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <li>\r\n            <NavLink to={path} className={classes.link} activeClassName={classes.active}>\r\n                {props.name}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\nconst Message = (props) => {\r\n  return (\r\n      <div className={classes.message}>{props.message}</div>\r\n  )\r\n};\r\n\r\nconst Dialogs = (props) => {\r\n    console.log(props)\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText);\r\n    };\r\n\r\n    if(!props.isAuth) return <Redirect to=\"/login\"/>;\r\n\r\n    return(\r\n            <div className={classes.dialogs}>\r\n                <nav className={classes.nav}>\r\n                    <ul className={classes.users}>\r\n                        {dialogsElements}\r\n                    </ul>\r\n                </nav>\r\n                <div className={classes.messages}>\r\n                    {messagesElements}\r\n                    <div className={classes.account}>\r\n                        <div className={classes.box}>\r\n                            <img src={accountImg} alt=\"\" className={classes.img}/>\r\n                            <span className={classes.fullName}><a href=\"/#\" className={classes.link}>Name</a></span>\r\n                        </div>\r\n                        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n      <form onSubmit={props.handleSubmit} className={classes.form}>\r\n          <label htmlFor=\"post\">\r\n              <span> Հաղորդագրություն </span>\r\n              <Field component={Textarea} name=\"newMessageText\" placeholder='Գրեք Ձեր հաղորդագրությունը' className={classes.messageArea} validate={[required, maxLength50]}/>\r\n          </label>\r\n          <button className={classes.btn} >Ուղարկել</button>\r\n      </form>\r\n  )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({\r\n    form: \"dialogAddMessageForm\"\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./dialogs\";\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        newMessageText: state.dialogsPage.newMessageText,\r\n    }\r\n};\r\n\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(sendMessageCreator(newMessageText))\r\n        },\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}